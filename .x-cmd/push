# shellcheck shell=dash

___x_cmd_release_push(){
    x cp -f release/dist/"${___X_CMD_PKG_RELEASE_VERSION}".tar.gz   pkg/dist/"${___X_CMD_PKG_RELEASE_VERSION}".tar.gz || return
    x cp -f release/dist/"${___X_CMD_PKG_RELEASE_VERSION}_hash.txt" pkg/dist/"${___X_CMD_PKG_RELEASE_VERSION}_hash.txt" || return
    x cd ./pkg || return
    git add "$(x wsroot)/dist"
    git commit -m "update pkg bundle package by $GITHUB_RUN_NUMBER"

}

x cd "$(x wsroot)" || return 1

case "$1" in
    pre_release)
        x rmrf .github/workflows
        git add "$(x wsroot)"
        git commit -m "update pkg bundle package by $GITHUB_RUN_NUMBER"
        git push -f git@github.com:x-cmd-pkg/release main
        ;;
    fabu)
        [ -n "$___X_CMD_PKG_RELEASE_VERSION" ] || return
        git clone git@github.com:x-cmd-pkg/release

        (
            git clone git@gitcode.net:x-cmd/pkg
            ___x_cmd_release_push || return
            git push git@gitcode.net:x-cmd/pkg main
        ) || return
            x rmrf pkg
        (
            x cp -f release/dist/"${___X_CMD_PKG_RELEASE_VERSION}".tar.gz   ./dist/"${___X_CMD_PKG_RELEASE_VERSION}".tar.gz || return
            x cp -f release/dist/"${___X_CMD_PKG_RELEASE_VERSION}_hash.txt" ./dist/"${___X_CMD_PKG_RELEASE_VERSION}_hash.txt" || return
            git add "$(x wsroot)/dist"
            git commit -m "update pkg bundle package by $GITHUB_RUN_NUMBER"
            git push git@github.com:x-cmd/pkg main
        ) || return

        (
            git clone git@gitee.com:x-cmd/pkg
            ___x_cmd_release_push || return
            git push git@gitee.com:x-cmd/pkg main
        ) || return

            ;;

    test_doc)
        tmp="$(x wsroot)/doc"
        (
            x env try rust
            git clone https://github.com/eza-community/eza.git
            x cd eza
            cargo install --path . --root "$(x wsroot)/doc/"
        )
        git add "$(x wsroot)/doc"
        git commit -m "update pkg test doc by $GITHUB_RUN_NUMBER"
        git push git@github.com:x-cmd/pkg "$(git branch --show-current)"
        ;;
    *)
        x:error "unknown push type: $1"
        return 1
esac


