# shellcheck shell=sh disable=SC2154,SC2164,2046,2106,3043 #source
generate_mdtable(){
    printf "%s\n" "| candidate \\ osarch | linux/x64 | linux/arm64 | darwin/x64 | darwin/arm64 | win/x64 |"
    printf "%s\n" "| ------------------ | ----------- | ------------ | ---------- | --------- | ------- |"

    local dir ; local pkg ;  local category;
    for dir in "$(x wsroot)"/src/*; do
        category="${dir##*/}"

        [ -d "$dir" ] || continue
        for pkg in "$dir"/*; do
            pkg="${pkg##*/}"
            x:info "$category/$pkg"
            generate_mdtable_online "$category" "$pkg" "$version" "$network"
        done
    done
}

generate_mdtable_online(){
    local category="$1"; local pkg="$2";
    local version="${3:-$(___x_cmd_pkg_default_version "$pkg")}"
    local network="$4"
    printf "|%s/%s " "$category" "$pkg"
    # output example: url="https://gitcode.net/x-cmd-build/jq/-/releases/v0.0.0/downloads/jq.darwin.x64.7z"; http_code="302"; time_total="1297ms"
    local url ; local http_code ; local time_total
    x pkg _head_test_urls "$pkg" "$version" | while read -r line; do
        if [ -z "$line" ] || [ "$line" = "-" ]; then
            printf "| - "
            continue
        fi

        eval "$line"
        case $http_code in
            200|302|304)    printf "| %s(%s) " "✅" "$time_total"                 ;;
            000)            printf "| ❌(timeout)"
                            x:error "url: $url, http_code: timeout"                 ;;
            *)              printf "| %s(%s)" "❌" "${http_code:-"timeout"}"
                            x:error "url: $url, http_code: $http_code"              ;;
        esac
    done
    printf "|\n"
}

local network="${1:-"cn"}"
local result_path; result_path="$(x wsroot)/doc/default_url/$network.md"
x touch "$result_path"

x:info "Generate: markdown table for $network network"
(
    generate_mdtable "$network" >"$result_path"
)
