# shellcheck shell=sh disable=SC2154,SC2164,2046,2106,3043 #source

generate_smoke_file()(
    x:info "Generate binmod.txt file"
    x log +pkg +x
    x exa >&2
    find src -name meta.yml | while read -r line; do
        pkg_name="${line%/meta.yml}"
        p="$PWD/$pkg_name/.x-cmd/smoke.sh"
        if [ -f "$p" ]; then
            x:info "Found $p"
            continue
        else
            mkdir -p "$(dirname "$p")"
            touch "$p"
            x:warn "Not found $p, create it"
        fi
    done
)

generate_xbin_list()(
    x:info "Generate binmod.txt file"
    x log +pkg +x
    x exa >&2
    cd "$___X_CMD_ROOT_DATA/pkg/raw/" || return
    find . -name meta.tt.json | while read -r line; do
        pkg_name="${line%/meta.tt.json}"
        category="${pkg_name%/*}"
        category="${category##*/}"
        pkg_name="${pkg_name##*/}"

        < "$line" x ja -v NAME="$pkg_name" -v category="$category" '{
            if (k()=="static-build") {
                _idx = index(v(), "/")
                NAME=substr(v(), _idx+1)
            }
            if ((O[1]=="\"xbin\"") && (v() !~ /^[\{}]$/)) {
                _name = ( D == 1 ) ? NAME : k()
                if(uq[ _name ] == "") {
                    print category " " NAME " " _name
                    uq[ _name ] = _name
                }
            }
        }
        '
    done
)

generate_mdtable(){
    local startime; local endtime ; local version; local bin_dir
    generate_xbin_list | while read -r category candiate xbin; do
        printf " %s/%s/%s " "$category" "$candiate" "$xbin"

        echo >&2
        x:info "========= $xbin =============="

        version="$(x pkg default_version "$candiate")"
        [ -n "$version" ] || {
            printf ", %s \n" "-"
            continue
        }

        startime="$(date +'%s')"
        if ! x pkg xbin init "$xbin" >/dev/null || ! [ -f "$(x pkg xbin path "$xbin")" ] ; then
            printf ", %s \n" "❌(xbin init)"
            continue
        fi
        endtime="$(date +'%s')"

        x:info "time: $((endtime - startime))s $endtime $startime"

        x pkg _smoke "$xbin"; local c="$?"
        if [ "$c" != 0 ]; then
            case "$c" in
                11) printf ", %s \n" "❌(env_try)"  ;;
                12) printf ", %s \n" "❌(install_path)"   ;;
                13) printf ", %s \n" "❌(smoke)"   ;;
                *) printf ", %s \n" "❌(other)"
            esac
            continue
        fi

        printf ", %s \n" "✅($((endtime - startime))s)"
        bin_dir="$(x pkg xbin path "$xbin")"
        bin_dir="${bin_dir%/*}"
        x:info "$xbin -> $bin_dir"
        x:info "bin_list -> $(generate_bin_list "$bin_dir")"
    done
}

generate_bin_list(){
    find "$1" -type f | while read -r bin_path; do
        if [ -x "$bin_path" ]; then
            printf "%s, " "${bin_path##*/}"
        fi
    done
}

local network="${1:-"cn"}"
local osarch; osarch="$(x os name)$(x os arch)"
local result_path; result_path="$(x wsroot)/doc/xbin/$(x os name).$(x os arch).$network.csv"
x touch "$result_path"

x:info "Generate => markdown table for $network network, osarch => $osarch"
(
    generate_mdtable "$network" >"$result_path"

    if git diff --name-only | grep -q doc/ ; then
        git pull && xws test_gen_table.py
        true
    fi
)
